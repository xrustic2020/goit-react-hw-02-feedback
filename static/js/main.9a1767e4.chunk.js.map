{"version":3,"sources":["components/Container/Container.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","function/countTotalFeedback.js","function/countPositiveFeedbackPercentage.js","function/leaveFeedback.js","App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","FeedbackOptions","options","onLeaveFeedback","feedback","map","item","type","onClick","toUpperCase","slice","Notification","message","notification","Statistics","good","neutral","bad","total","positivePercentage","totalFeedback","percent","markup","statisticsList","toFixed","countTotalFeedback","countPositiveFeedbackPercentage","leaveFeedback","this","setState","prevState","App","state","bind","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,SAAW,oC,gBCA7BD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,eAAiB,qC,sKCEpB,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,oBCDxB,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACvC,OACE,oCACE,oBAAIC,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBL,K,oBCaQM,MAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKP,UAAWC,IAAEO,SAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,wBACEC,KAAK,SAELC,QAAS,WACPL,EAAgBG,IAJpB,SAOGA,EAAK,GAAGG,cAAgBH,EAAKI,MAAM,IAL/BJ,S,iBCNA,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGhB,UAAWC,IAAEgB,aAAhB,SAA+BD,I,qBCAzB,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEMC,EAAgBF,EAAMH,EAAMC,EAASC,GACrCI,EAAUF,EAAmBC,EAAeL,GAC5CO,EACJ,qBAAI1B,UAAWC,IAAE0B,eAAjB,UACE,wCAAWR,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYG,KACZ,qDAAwBC,EAAUA,EAAQG,UAAY,EAAtD,WAGJ,OACE,mCAAGJ,EAAgBE,EAAS,cAACX,EAAD,CAAcC,QAAQ,wBCvBvC,SAASa,EAAmBV,EAAMC,EAASC,GACxD,OAAOF,EAAOC,EAAUC,ECDX,SAASS,EAAgCR,EAAOH,GAC7D,OAAQA,EAAOG,EAAS,I,YCDX,SAASS,EAAcpB,GACpCqB,KAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGvB,EAAOuB,EAAUvB,GAAQ,M,IC0CxBwB,E,4MAhCbC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,cAAgBA,EAAcM,KAAd,gB,4CAEhB,WAAU,IAAD,EACwBL,KAAKI,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAACvB,EAAD,WACE,cAACK,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEE,QAASgC,OAAOC,KAAKP,KAAKI,OAC1B7B,gBAAiByB,KAAKD,kBAG1B,cAAC5B,EAAD,CAASC,MAAM,aAAf,SACE,cAACc,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,EACPN,mBAAoBO,a,GAzBdU,aCNlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a1767e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__vePU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2YLRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__jI_O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2BHo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__1SvC3\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.feedback}>\r\n      {options.map(item => (\r\n        <button\r\n          type=\"button\"\r\n          key={item}\r\n          onClick={() => {\r\n            onLeaveFeedback(item);\r\n          }}\r\n        >\r\n          {item[0].toUpperCase() + item.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.notification}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Notification from 'components/Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  const totalFeedback = total(good, neutral, bad);\r\n  const percent = positivePercentage(totalFeedback, good);\r\n  const markup = (\r\n    <ul className={s.statisticsList}>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {totalFeedback}</li>\r\n      <li>Positive feedback: {percent ? percent.toFixed() : 0} %</li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <>{totalFeedback ? markup : <Notification message=\"No feedback given\" />}</>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n","export default function countTotalFeedback(good, neutral, bad) {\r\n  return good + neutral + bad;\r\n}\r\n","export default function countPositiveFeedbackPercentage(total, good) {\r\n  return (good / total) * 100;\r\n}\r\n","export default function leaveFeedback(type) {\r\n  this.setState(prevState => {\r\n    return { [type]: prevState[type] + 1 };\r\n  });\r\n}\r\n","import { Component } from 'react';\r\n\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport FeedbackOptions from 'components/FeedbackOptions';\r\nimport Statistics from 'components/Statistics';\r\n\r\nimport countTotalFeedback from './function/countTotalFeedback';\r\nimport countPositiveFeedbackPercentage from './function/countPositiveFeedbackPercentage';\r\nimport leaveFeedback from './function/leaveFeedback';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  leaveFeedback = leaveFeedback.bind(this);\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <Container>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.leaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback}\r\n            positivePercentage={countPositiveFeedbackPercentage}\r\n          />\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}